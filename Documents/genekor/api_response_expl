ΠΛΗΡΗΣ ΚΩΔΙΚΑΣ

from fastapi import FastAPI
import pandas as pd
import ast
➤ Τι κάνει αυτό:
FastAPI: Φορτώνει το framework για την κατασκευή API endpoints.

pandas: Φορτώνει και επεξεργάζεται το αρχείο CSV σαν DataFrame.

ast: Το ast.literal_eval μετατρέπει string λίστες σε κανονικές λίστες Python με ασφάλεια (π.χ. "['PS1']" → ['PS1']).


app = FastAPI()
➤ Δημιουργεί την εφαρμογή FastAPI
Είναι η "καρδιά" του API και εκεί πάνω θα οριστούν όλα τα endpoints.


df = pd.read_csv('brca_acmg_variants.csv')
➤ Φορτώνει το αρχείο brca_acmg_variants.csv ως DataFrame df.
Πρέπει να έχει τουλάχιστον τις εξής στήλες:

ProteinChange (π.χ. p.Cys61Gly)

variant_type (π.χ. missense_variant, frameshift_variant, κ.λπ.)

acmg_criteria → λίστα με κριτήρια (π.χ. ["PS1", "PM5"])


df['acmg_criteria'] = df['acmg_criteria'].apply(
    lambda x: ast.literal_eval(x) if isinstance(x, str) else []
)
➤ Επεξεργάζεται τη στήλη acmg_criteria:
Κάποιες φορές στο CSV, η στήλη αυτή είναι string (π.χ. "['PM5', 'PP3']").

Η ast.literal_eval(x) μετατρέπει το string σε πραγματική λίστα Python.

Αν το x δεν είναι string (είναι NaN ή λίστα), επιστρέφει απλώς [].

Έτσι εξασφαλίζεις ότι η στήλη acmg_criteria περιέχει πάντα κανονικές λίστες Python, π.χ.:


["PS1", "PM5"] αντί για "'[\"PS1\", \"PM5\"]'"



@app.get("/variant_info/{mutation}")
def get_variant_info(mutation: str):
➤ Ορίζει endpoint: /variant_info/{mutation}
Δέχεται ένα GET αίτημα στη διεύθυνση /variant_info/κάτι

Το κάτι (π.χ. p.Cys61Gly) περνάει στη μεταβλητή mutation ως str.


    match = df[df['ProteinChange'] == mutation]
➤ Φιλτράρει τις γραμμές όπου το πεδίο ProteinChange ταιριάζει ακριβώς με τη μετάλλαξη που δόθηκε.
Δηλαδή βρίσκει τη γραμμή για τη συγκεκριμένη μετάλλαξη.

Αν δεν υπάρχει αντιστοιχία, η match θα είναι άδεια (empty).




    if match.empty:
        return {
            "mutation": mutation,
            "message": "Η μετάλλαξη δεν βρέθηκε στη βάση δεδομένων."
        }
➤ Αν δεν βρέθηκε καμία γραμμή:
Επιστρέφει ένα JSON μήνυμα ότι η μετάλλαξη δεν υπάρχει στο αρχείο.



    row = match.iloc[0]
➤ Παίρνει την πρώτη (και συνήθως μοναδική) γραμμή που ταιριάζει.
iloc[0] σημαίνει: "δώσε μου την πρώτη γραμμή από το φίλτρο".

Η row είναι μια σειρά (Series) με τα δεδομένα της μετάλλαξης.



    return {
        "mutation": mutation,
        "variant_type": row['variant_type'],
        "acmg_criteria": row['acmg_criteria'],
    }
➤ Επιστρέφει τα αποτελέσματα σε μορφή JSON:
mutation: η μετάλλαξη που αναζητήθηκε

variant_type: το είδος της (π.χ. missense_variant)

acmg_criteria: λίστα με τα ACMG κριτήρια που πληροί (π.χ. ["PM5", "PP3"])
ΠΑΡΑΔΕΙΓΜΑ ΧΡΗΣΗΣ
🔹 Ερώτημα:
GET http://localhost:8000/variant_info/p.Cys61Gly


🔹 Απόκριση:

{
  "mutation": "p.Cys61Gly",
  "variant_type": "missense_variant",
  "acmg_criteria": ["PS1", "PM5"]
}